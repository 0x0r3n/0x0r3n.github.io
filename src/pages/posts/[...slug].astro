---
import { getCollection } from "astro:content";
import { SlugToRealSlug } from "../../utils/hash";

import Main from "../../layouts/MainLayout.astro";
import Markdown from "../../components/Markdown.astro";
import SideBar from "../../components/SideBar.astro";
import Copyright from "../../components/Copyright.astro";

interface Title {
  title: string;
  slug: string;
  children: Title[];
}

export async function getStaticPaths() {
  const postEntries = await getCollection("posts");
  return postEntries.map((entry) => ({
    params: { slug: SlugToRealSlug(entry.slug) },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
// let tocHTMLString = "";
// function Traverse(node: Title, level: number): string {
//   return `
//     <div>
//       <a class="h${level}" href="#${node.slug}">${node.title}</a>
//       ${node.children.length > 0 ? node.children.map((child) => Traverse(child, level + 1)).join("") : ""}
//     </div>`;
// }
// for (const children of remarkPluginFrontmatter.toc) {
//   tocHTMLString += Traverse(children, 1);
// }
---

<Main
  title={entry.data.title}
  subTitle={entry.data.description}
  headerImg={entry.data.image}
  hashedSlug={SlugToRealSlug(entry.slug)}
>
  <!-- <Fragment set:html={tocHTMLString} /> -->
  <div class="flex flex-row xl:space-x-4 items-start">
    <div class="side-bar">
      <SideBar />
    </div>
    <div class="article onload-animation">
      <Markdown>
        <Content />
      </Markdown>
      <Copyright title={entry.data.title} published={entry.data.published} />
    </div>
  </div>
</Main>

<style>
  .side-bar {
    @apply hidden min-w-[248px] xl:block;
  }

  .article {
    @apply bg-[var(--card-color)] p-10 rounded-2xl shrink flex flex-col min-w-full max-w-full xl:min-w-[80%] xl:max-w-[80%];
  }
</style>
